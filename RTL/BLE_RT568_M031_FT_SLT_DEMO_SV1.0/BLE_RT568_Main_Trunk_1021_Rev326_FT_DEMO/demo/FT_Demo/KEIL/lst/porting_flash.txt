; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\porting_flash.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\porting_flash.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\include -I..\..\..\porting -I..\..\..\include\rf_include -I..\..\..\porting\rf_porting -I..\..\FT_Demo -I..\FT_Func -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M031\Include -I..\..\..\Library\StdDriver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=531 --omf_browse=.\obj\porting_flash.crf ..\..\..\porting\porting_flash.c]
                          THUMB

                          AREA ||i.SYS_UnlockReg||, CODE, READONLY, ALIGN=2

                  SYS_UnlockReg PROC
;;;1341     */
;;;1342   __STATIC_INLINE void SYS_UnlockReg(void)
000000  b510              PUSH     {r4,lr}
;;;1343   {
;;;1344       do {
;;;1345           SYS->REGLCTL = 0x59;
000002  2159              MOVS     r1,#0x59
000004  4804              LDR      r0,|L1.24|
;;;1346           SYS->REGLCTL = 0x16;
000006  2216              MOVS     r2,#0x16
;;;1347           SYS->REGLCTL = 0x88;
000008  2388              MOVS     r3,#0x88
                  |L1.10|
00000a  6001              STR      r1,[r0,#0]            ;1345
00000c  6002              STR      r2,[r0,#0]            ;1346
00000e  6003              STR      r3,[r0,#0]
;;;1348       } while (SYS->REGLCTL == 0);
000010  6804              LDR      r4,[r0,#0]
000012  2c00              CMP      r4,#0
000014  d0f9              BEQ      |L1.10|
;;;1349   }
000016  bd10              POP      {r4,pc}
;;;1350   
                          ENDP

                  |L1.24|
                          DCD      0x40000100

                          AREA ||i.flash_erase_internal_use||, CODE, READONLY, ALIGN=2

                  flash_erase_internal_use PROC
;;;46     /* flash erase function for BLE */
;;;47     int32_t flash_erase_internal_use(uint32_t u32Addr)
000000  b570              PUSH     {r4-r6,lr}
;;;48     {
000002  4606              MOV      r6,r0
;;;49         int32_t EraseStatus = 0;
;;;50     
;;;51         __disable_irq();
000004  b672              CPSID    i
;;;52     
;;;53         /* Unlock protected registers */
;;;54         SYS_UnlockReg();
000006  f7fffffe          BL       SYS_UnlockReg
;;;55         /* Enable FMC ISP function */
;;;56         FMC_Open();
00000a  f7fffffe          BL       FMC_Open
;;;57     
;;;58         FMC_ENABLE_AP_UPDATE();
00000e  4c0a              LDR      r4,|L2.56|
000010  6821              LDR      r1,[r4,#0]
000012  2508              MOVS     r5,#8
000014  4329              ORRS     r1,r1,r5
000016  6021              STR      r1,[r4,#0]
;;;59         EraseStatus = FMC_Erase(u32Addr);
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       FMC_Erase
;;;60         FMC_DISABLE_AP_UPDATE();
00001e  6821              LDR      r1,[r4,#0]
000020  4606              MOV      r6,r0                 ;59
000022  43a9              BICS     r1,r1,r5
000024  6021              STR      r1,[r4,#0]
;;;61     
;;;62         /* Disable FMC ISP function */
;;;63         FMC_Close();
000026  f7fffffe          BL       FMC_Close
00002a  4904              LDR      r1,|L2.60|
00002c  2000              MOVS     r0,#0
00002e  6008              STR      r0,[r1,#0]
;;;64         /* Lock protected registers */
;;;65         SYS_LockReg();
;;;66     
;;;67         __enable_irq();
000030  b662              CPSIE    i
;;;68     
;;;69         return EraseStatus;
000032  4630              MOV      r0,r6
;;;70     }
000034  bd70              POP      {r4-r6,pc}
;;;71     #endif
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
                          DCD      0x4000c000
                  |L2.60|
                          DCD      0x40000100

                          AREA ||i.flash_program_internal_use||, CODE, READONLY, ALIGN=2

                  flash_program_internal_use PROC
;;;26     /* flash program function for BLE */
;;;27     void flash_program_internal_use(uint32_t u32Addr, uint32_t u32Data)
000000  b5f8              PUSH     {r3-r7,lr}
;;;28     {
000002  460e              MOV      r6,r1
000004  4607              MOV      r7,r0
;;;29         __disable_irq();
000006  b672              CPSID    i
;;;30         /* Unlock protected registers */
;;;31         SYS_UnlockReg();
000008  f7fffffe          BL       SYS_UnlockReg
;;;32         /* Enable FMC ISP function */
;;;33         FMC_Open();
00000c  f7fffffe          BL       FMC_Open
;;;34     
;;;35         FMC_ENABLE_AP_UPDATE();
000010  4c09              LDR      r4,|L3.56|
000012  6820              LDR      r0,[r4,#0]
000014  2508              MOVS     r5,#8
000016  4328              ORRS     r0,r0,r5
000018  6020              STR      r0,[r4,#0]
;;;36         FMC_Write(u32Addr, u32Data);
00001a  4631              MOV      r1,r6
00001c  4638              MOV      r0,r7
00001e  f7fffffe          BL       FMC_Write
;;;37         FMC_DISABLE_AP_UPDATE();
000022  6820              LDR      r0,[r4,#0]
000024  43a8              BICS     r0,r0,r5
000026  6020              STR      r0,[r4,#0]
;;;38     
;;;39         /* Disable FMC ISP function */
;;;40         FMC_Close();
000028  f7fffffe          BL       FMC_Close
00002c  4903              LDR      r1,|L3.60|
00002e  2000              MOVS     r0,#0
000030  6008              STR      r0,[r1,#0]
;;;41         /* Lock protected registers */
;;;42         SYS_LockReg();
;;;43         __enable_irq();
000032  b662              CPSIE    i
;;;44     }
000034  bdf8              POP      {r3-r7,pc}
;;;45     
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      0x4000c000
                  |L3.60|
                          DCD      0x40000100

                          AREA ||.ARM.__AT_0x0000F800||, DATA, READONLY, ALIGN=0

                  INFO_FLASHBOND
                          %        1024

                          AREA ||.ARM.__AT_0x0000FC00||, DATA, READONLY, ALIGN=0

                  DATA_FLASHBOND
                          %        1024

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\porting\\porting_flash.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_porting_flash_c_1d3f7d5e____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___15_porting_flash_c_1d3f7d5e____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_porting_flash_c_1d3f7d5e____REVSH|
#line 402
|__asm___15_porting_flash_c_1d3f7d5e____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
